services:
  redis:
    image: redis:alpine
    networks:
      - backend

  test-ws:
    build: ./test_ws_server
    networks:
      - proxy
      - backend
    depends_on:
      - redis
    labels:
      # Traefik
      - traefik.enable=true
      - traefik.docker.network=proxy
      # Redirect http to https
      - traefik.http.middlewares.test-ws-redirect-websecure.redirectscheme.scheme=https
      - traefik.http.routers.test-ws-web.middlewares=test-ws-redirect-websecure
      - traefik.http.routers.test-ws-web.rule=Host("ritual.gozz.id.au")
      - traefik.http.routers.test-ws-web.entrypoints=web
      # Accept https with letsencrypt
      - traefik.http.routers.test-ws-websecure.rule=Host("ritual.gozz.id.au")
      - traefik.http.routers.test-ws-websecure.tls.certresolver=letencrypt
      - traefik.http.routers.test-ws-websecure.tls=true
      - traefik.http.routers.test-ws-websecure.entrypoints=websecure
      # Port
      - traefik.http.services.test-ws-websecure.loadbalancer.server.port=80

networks:
  proxy:
    external: true
  backend: